@model ProjectsViewModel

@{
    ViewData["Title"] = "Projects";
    // bool isAuthorized = (await authService.AuthorizeAsync(User, "Authorized")).Succeeded;
    bool isAuthorized = true;
}

@if (!isAuthorized)
{
    <h4>Contact your Administrator to get access to projects ...</h4>
}
else
{
    <partial name="_AddProjectModal" model="@Model.form" />

    <section class="section-projects">
        <div class="d-flex justify-content-between mb-5">
            <h1>Projects</h1>
            @if (!User.IsInRole("Viewer"))
            {
                <button class="btn btn-blue" data-bs-toggle="modal" data-bs-target="#addProjectModal">Add Project</button>
            }
        </div>
        
        <div class="project-sort-menu-container">
            <div class="project-sort-menu">
                <a href="#" class="filter-link active" data-status="ALL">ALL [@ViewBag.CountAll]</a>
                <a href="#" class="filter-link" data-status="Pending">PENDING [@ViewBag.CountPending]</a>
                <a href="#" class="filter-link" data-status="Active">STARTED [@ViewBag.CountStarted]</a>
                <a href="#" class="filter-link" data-status="Closed">COMPLETED [@ViewBag.CountCompleted]</a>
            </div> 
        </div>

        <div id="projects-container">
            <partial name="_ProjectList" model="@Model.Projects" />
        </div>
    </section>
}

<script>
    //  Claude AI has been helpful with setting up this script
    //  By providing AI with a starting point and discussing with AI to come up with the best solution.
    //  I have then modified and reviewed to make sure it works as intended.
    document.addEventListener('DOMContentLoaded', function() {
        const filterLinks = document.querySelectorAll('.filter-link');
        const projectCards = document.querySelectorAll('.project-card');

        if (filterLinks.length > 0) {
            filterLinks.forEach(link => {
                link.addEventListener('click', function(e) {
                    e.preventDefault();
                    filterLinks.forEach(l => l.classList.remove('active'));
                    this.classList.add('active');
                    const status = this.getAttribute('data-status');

                    if (projectCards.length > 0) {
                        applyFilters(status, document.querySelector("#topbar-search")?.value || '');
                    }
                });
            });
        }

        const topbarSearch = document.querySelector("#topbar-search");
        if (topbarSearch && projectCards.length > 0) {
            topbarSearch.addEventListener("input", (e) => {
                const activeFilter = document.querySelector('.filter-link.active');
                const status = activeFilter ? activeFilter.getAttribute('data-status') : 'ALL';

                applyFilters(status, e.target.value);
            });
        }

        function applyFilters(status, searchQuery) {
            searchQuery = (searchQuery || '').toLowerCase();

            projectCards.forEach(card => {
                const projectStatus = card.getAttribute('data-status') || '';

                const searchableElements = [
                    card.querySelector('.project-title'),
                    card.querySelector('.project-description'),
                    card.querySelector('.project-client'),
                ];

                const matchesStatus = (status === 'ALL' || status === projectStatus);

                let matchesSearch = searchQuery === '';

                if (!matchesSearch) {
                    for (const element of searchableElements) {
                        if (element && element.textContent.toLowerCase().includes(searchQuery)) {
                            matchesSearch = true;
                            break;
                        }
                    }
                }

                if (matchesStatus && matchesSearch) {
                    card.style.display = '';
                } else {
                    card.style.display = 'none';
                }
            });
        }        
    });
</script>











